/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controler.C_Formulari_Principal;
import Model.M_Categoria;
import Model.M_Vaixell;
import Persist.P_CategoriaDAO;
import Persist.P_VaixellDAO;
import Util.U_Validadors;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.plaf.ColorUIResource;

/**
 *
 * @author nmartinez
 */
public class V_Formulari_Editar extends javax.swing.JDialog {

    /**
     * Creates new form V_Formulari_Afegir
     */
    
    private C_Formulari_Principal cfp;
    
    public V_Formulari_Editar(java.awt.Frame parent, boolean modal,C_Formulari_Principal cfp,int id) {
        super(parent, modal);
        try {
            this.cfp = cfp;
            initComponents();
            meterCategoria();
            cogerDatos(id);
        } catch (SQLException ex) {
            Logger.getLogger(V_Formulari_Editar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        LabelCodi = new javax.swing.JLabel();
        FieldCodi = new javax.swing.JTextField();
        LabelNom = new javax.swing.JLabel();
        FieldNom = new javax.swing.JTextField();
        LabelCategoria = new javax.swing.JLabel();
        LabelRating = new javax.swing.JLabel();
        FieldRating = new javax.swing.JTextField();
        ComboBoxCategoria = new javax.swing.JComboBox<>();
        LabelClub = new javax.swing.JLabel();
        FieldClub = new javax.swing.JTextField();
        LabelTipus = new javax.swing.JLabel();
        RegataButton = new javax.swing.JRadioButton();
        CreuerButton = new javax.swing.JRadioButton();
        CreuerRegataButton = new javax.swing.JRadioButton();
        CheckBoxSenior = new javax.swing.JCheckBox();
        LabelTemps = new javax.swing.JLabel();
        FieldTemps = new javax.swing.JTextField();
        ErrorLabelCodi = new javax.swing.JLabel();
        ButtonAfegir = new javax.swing.JButton();
        ErrorLabelNom = new javax.swing.JLabel();
        ErrorLabelRating = new javax.swing.JLabel();
        ErrorLabelClub = new javax.swing.JLabel();
        ErrorLabelTemps = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        LabelCodi.setText("Codi");

        FieldCodi.setBackground(new java.awt.Color(44, 62, 80));
        FieldCodi.setForeground(new java.awt.Color(255, 255, 255));
        FieldCodi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FieldCodiFocusLost(evt);
            }
        });
        FieldCodi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldCodiActionPerformed(evt);
            }
        });

        LabelNom.setText("Nom");

        FieldNom.setBackground(new java.awt.Color(44, 62, 80));
        FieldNom.setForeground(new java.awt.Color(255, 255, 255));
        FieldNom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FieldNomFocusLost(evt);
            }
        });
        FieldNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldNomActionPerformed(evt);
            }
        });

        LabelCategoria.setText("Categoria");

        LabelRating.setText("Rating");

        FieldRating.setBackground(new java.awt.Color(44, 62, 80));
        FieldRating.setForeground(new java.awt.Color(255, 255, 255));
        FieldRating.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FieldRatingFocusLost(evt);
            }
        });
        FieldRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldRatingActionPerformed(evt);
            }
        });

        LabelClub.setText("Club");

        FieldClub.setBackground(new java.awt.Color(44, 62, 80));
        FieldClub.setForeground(new java.awt.Color(255, 255, 255));
        FieldClub.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FieldClubFocusLost(evt);
            }
        });
        FieldClub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldClubActionPerformed(evt);
            }
        });

        LabelTipus.setText("Tipus");

        buttonGroup1.add(RegataButton);
        RegataButton.setSelected(true);
        RegataButton.setText("regata");
        RegataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegataButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(CreuerButton);
        CreuerButton.setText("creuer");

        buttonGroup1.add(CreuerRegataButton);
        CreuerRegataButton.setText("creuer-regata");

        CheckBoxSenior.setText("Senior?");

        LabelTemps.setText("Temps");

        FieldTemps.setBackground(new java.awt.Color(44, 62, 80));
        FieldTemps.setForeground(new java.awt.Color(255, 255, 255));
        FieldTemps.setCaretColor(new java.awt.Color(255, 255, 255));
        FieldTemps.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FieldTempsFocusLost(evt);
            }
        });
        FieldTemps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldTempsActionPerformed(evt);
            }
        });

        ErrorLabelCodi.setForeground(new java.awt.Color(255, 0, 0));

        ButtonAfegir.setBackground(new java.awt.Color(94, 156, 87));
        ButtonAfegir.setText("Afegir");
        ButtonAfegir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAfegirActionPerformed(evt);
            }
        });

        ErrorLabelNom.setForeground(new java.awt.Color(255, 0, 0));

        ErrorLabelRating.setForeground(new java.awt.Color(255, 0, 0));

        ErrorLabelClub.setForeground(new java.awt.Color(255, 0, 0));

        ErrorLabelTemps.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(LabelNom))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(LabelRating))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(326, 326, 326)
                        .addComponent(LabelTemps))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(314, 314, 314)
                            .addComponent(CheckBoxSenior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(233, 233, 233)
                            .addComponent(RegataButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(FieldTemps, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(LabelTipus)
                                            .addComponent(CreuerButton))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(CreuerRegataButton))
                                    .addComponent(ErrorLabelTemps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(317, 317, 317)
                        .addComponent(LabelCategoria))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(LabelCodi))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(LabelClub))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(ButtonAfegir, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(FieldClub, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(FieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(FieldCodi, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ErrorLabelCodi, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                .addComponent(ErrorLabelNom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(FieldRating, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ErrorLabelRating, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ErrorLabelClub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(218, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(LabelCodi)
                .addGap(18, 18, 18)
                .addComponent(FieldCodi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorLabelCodi, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelNom)
                .addGap(18, 18, 18)
                .addComponent(FieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorLabelNom, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelCategoria)
                .addGap(18, 18, 18)
                .addComponent(ComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(LabelRating)
                .addGap(18, 18, 18)
                .addComponent(FieldRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(ErrorLabelRating, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelClub)
                .addGap(18, 18, 18)
                .addComponent(FieldClub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorLabelClub, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelTipus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegataButton)
                    .addComponent(CreuerButton)
                    .addComponent(CreuerRegataButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CheckBoxSenior)
                .addGap(18, 18, 18)
                .addComponent(LabelTemps)
                .addGap(18, 18, 18)
                .addComponent(FieldTemps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorLabelTemps, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ButtonAfegir)
                .addContainerGap(191, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RegataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegataButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RegataButtonActionPerformed

    private void FieldCodiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldCodiActionPerformed
        
    }//GEN-LAST:event_FieldCodiActionPerformed

    private void FieldNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldNomActionPerformed

    private void FieldRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldRatingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldRatingActionPerformed

    private void FieldClubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldClubActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldClubActionPerformed

    private void FieldTempsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldTempsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldTempsActionPerformed

    private void FieldCodiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FieldCodiFocusLost

    }//GEN-LAST:event_FieldCodiFocusLost

    private void FieldNomFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FieldNomFocusLost
        FieldNom.setBackground(new Color(44,62,80));
        if(FieldNom.getText().equals("")){
            ErrorLabelNom.setText("No hi ha nom.");
            FieldNom.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(255, 57, 57)));
        } else {
            ErrorLabelNom.setText("");
            FieldNom.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.white));
        }
        comprobarTot();
    }//GEN-LAST:event_FieldNomFocusLost

    private void FieldRatingFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FieldRatingFocusLost
        String t = FieldRating.getText();
        boolean v = U_Validadors.validarDouble(t);
        if(!v){
            ErrorLabelRating.setText("El rating no es un numero");
            FieldRating.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(255, 57, 57)));
        } else {
            ErrorLabelRating.setText("");
            FieldRating.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.white));
        }
        comprobarTot();
    }//GEN-LAST:event_FieldRatingFocusLost

    private void FieldClubFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FieldClubFocusLost
        if(FieldClub.getText().equals("")){
            ErrorLabelClub.setText("No hi ha Club.");
            FieldClub.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(255, 57, 57)));
        } else {
            if(FieldClub.getText().length()>=3){
                ErrorLabelClub.setText("");
                FieldClub.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.white));
            }  else {
                ErrorLabelClub.setText("Minim caracters 3.");
                FieldClub.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(255, 57, 57)));
            }
        }
        comprobarTot();
    }//GEN-LAST:event_FieldClubFocusLost

    private void FieldTempsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FieldTempsFocusLost
        String t = FieldTemps.getText();
        boolean v = U_Validadors.validarDouble(t);
        if(!v){
            ErrorLabelTemps.setText("El temps no es un numero");
            FieldTemps.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(255, 57, 57)));
        } else {
            ErrorLabelTemps.setText("");
            FieldTemps.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.white));
        }
        comprobarTot();
    }//GEN-LAST:event_FieldTempsFocusLost

    private void ButtonAfegirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAfegirActionPerformed
        String tipus = "";
        UIManager UI = new UIManager();
        UI.put("OptionPane.background",new ColorUIResource(56,105,159));
        UI.put("Panel.background",new ColorUIResource(56,105,159));
        UI.put("OptionPane.messageForeground",new ColorUIResource(255,255,255));
        int seleccion = JOptionPane.showOptionDialog(
                    this,
                    "Afegir vaixell: " + FieldCodi.getText(),
                    "Vol afegir aquest vaixell?",
                    JOptionPane.OK_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, // null para icono por defecto.
                    new Object[]{"Si", "No"}, //, "No", "Si"}, // null para YES, NO y CANCEL
                    "Si");
        if(seleccion == 0){
            if(RegataButton.isSelected()){
                tipus = "Regata";
            } else if(CreuerButton.isSelected()){
                tipus = "Creuer";
            } else if(CreuerRegataButton.isSelected()) {
                tipus = "Creuer-Regata";
            }
            M_Vaixell vaix;
            M_Categoria cat = new M_Categoria(ComboBoxCategoria.getSelectedItem().toString());
            vaix = new M_Vaixell(Integer.parseInt(FieldCodi.getText()),
            FieldNom.getText(),
            cat,
            Double.parseDouble(FieldRating.getText()),
            FieldClub.getText(),
            tipus,
            CheckBoxSenior.isSelected(),
            Double.parseDouble(FieldTemps.getText()));
            try{    
            P_VaixellDAO.updateVaixell(vaix);
               JOptionPane.showOptionDialog(
                    this,
                    "Vaixell afegir satisfactoriament.",
                    "Informació!",
                    JOptionPane.OK_OPTION,
                    JOptionPane.INFORMATION_MESSAGE,
                    null, // null para icono por defecto.
                    new Object[]{"Ok"}, //, "No", "Si"}, // null para YES, NO y CANCEL
                    "Ok");
            } catch (Exception e){
                System.out.println(e.getStackTrace());
                System.out.println(e.getMessage());
               JOptionPane.showOptionDialog(
                    this,
                    "Hi ha hagut un error inesperat.",
                    "Error!",
                    JOptionPane.OK_OPTION,
                    JOptionPane.ERROR_MESSAGE,
                    null, // null para icono por defecto.
                    new Object[]{"Ok"}, //, "No", "Si"}, // null para YES, NO y CANCEL
                    "Ok");
            }
            dispose();
            cfp.mostraLlista("codi");
        }
    }//GEN-LAST:event_ButtonAfegirActionPerformed

    public boolean comprobarAlfaNumeric(){
        String txt = FieldClub.getText();
        boolean alfanumeric = true;
        for (int i = 0; i < txt.length(); i++) {
            if (!(txt.charAt(i) >= 65 && txt.charAt(i) <= 90 || txt.charAt(i) >= 97 && txt.charAt(i) <= 122 || txt.charAt(i) >= 48 && txt.charAt(i) <= 57)) {
                alfanumeric = false;
            }
        }
        if (!alfanumeric) {
            ErrorLabelClub.setText("Nomes caracters alfanumerics");
            FieldClub.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(255, 57, 57)));
        }
        return alfanumeric;
    }
    
    private void comprobarTot(){
            if(!FieldCodi.getText().isEmpty() && U_Validadors.validarInt(FieldCodi.getText())
                    && !FieldNom.getText().isEmpty() && !FieldRating.getText().isEmpty()
                    && U_Validadors.validarDouble(FieldRating.getText()) && !FieldClub.getText().isEmpty()
                    && !FieldTemps.getText().isEmpty() && U_Validadors.validarDouble(FieldTemps.getText())
                    && FieldClub.getText().length()>=3 && comprobarAlfaNumeric())
            {
                ButtonAfegir.setEnabled(true);
                ButtonAfegir.setBackground(new Color(94, 156, 87));
            } else{
                ButtonAfegir.setEnabled(false);
                ButtonAfegir.setBackground(new Color(156, 87, 87));
            }
    }
    
    
    public void meterCategoria() throws SQLException{
        ArrayList<M_Categoria> arrayCat = new ArrayList<M_Categoria>();
        arrayCat.addAll(P_CategoriaDAO.getAllCategoria());
        for (int i = 0; i < arrayCat.size(); i++) {
            ComboBoxCategoria.addItem(arrayCat.get(i).getNom());
        }
    }
    
    public void cogerDatos(int id) {
        try {
            M_Vaixell vai = P_VaixellDAO.getVaixell(id);
            FieldCodi.setText(vai.getCodi()+"");
            FieldNom.setText(vai.getNom());
            for (int i = 0; i < ComboBoxCategoria.getItemCount(); i++) {
                if (ComboBoxCategoria.getItemAt(i).toString().equals(vai.getCategoria().getNom())) {
                    ComboBoxCategoria.setSelectedIndex(i);
                }
            }
            FieldRating.setText(vai.getRating()+"");
            FieldClub.setText(vai.getClub());
            if(vai.getTipus().equals(RegataButton.getText())){
                RegataButton.setSelected(true);
                CreuerButton.setSelected(false);
                CreuerRegataButton.setSelected(false);
            } else if(vai.getTipus().equals(CreuerButton.getText())){
                RegataButton.setSelected(false);
                CreuerButton.setSelected(true);
                CreuerRegataButton.setSelected(false);
            } else if(vai.getTipus().equals(CreuerRegataButton.getText())) {
                RegataButton.setSelected(false);
                CreuerButton.setSelected(false);
                CreuerRegataButton.setSelected(true);
            }
            CheckBoxSenior.setSelected(vai.isSenior());
            FieldTemps.setText(vai.getTemps()+"");
            FieldCodi.setEditable(false);
        } catch (SQLException ex) {
            Logger.getLogger(V_Formulari_Editar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(V_Formulari_Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(V_Formulari_Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(V_Formulari_Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(V_Formulari_Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                V_Formulari_Editar dialog = new V_Formulari_Editar(new javax.swing.JFrame(), true,null,0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAfegir;
    private javax.swing.JCheckBox CheckBoxSenior;
    private javax.swing.JComboBox<String> ComboBoxCategoria;
    private javax.swing.JRadioButton CreuerButton;
    private javax.swing.JRadioButton CreuerRegataButton;
    private javax.swing.JLabel ErrorLabelClub;
    private javax.swing.JLabel ErrorLabelCodi;
    private javax.swing.JLabel ErrorLabelNom;
    private javax.swing.JLabel ErrorLabelRating;
    private javax.swing.JLabel ErrorLabelTemps;
    private javax.swing.JTextField FieldClub;
    private javax.swing.JTextField FieldCodi;
    private javax.swing.JTextField FieldNom;
    private javax.swing.JTextField FieldRating;
    private javax.swing.JTextField FieldTemps;
    private javax.swing.JLabel LabelCategoria;
    private javax.swing.JLabel LabelClub;
    private javax.swing.JLabel LabelCodi;
    private javax.swing.JLabel LabelNom;
    private javax.swing.JLabel LabelRating;
    private javax.swing.JLabel LabelTemps;
    private javax.swing.JLabel LabelTipus;
    private javax.swing.JRadioButton RegataButton;
    private javax.swing.ButtonGroup buttonGroup1;
    // End of variables declaration//GEN-END:variables
}
